//------------------------------------------------------------------------------
// @tool: Type
//------------------------------------------------------------------------------
// @author: hanakin -- midaym
// @version: 1.1.0
// @description
//
// A mixin for generating type settings based on Google Material Design types
//
//------------------------------------------------------------------------------

//@settings
$type-font-weight: (
	thin: 100,
	light: 300,
	regular: 400,
	medium: 500,
	bold: 700,
	black: 900
);

$type-styles: (
	headline1: (
		font-size: 6rem, // 96px
		letter-spacing: letterspacing(-1.5, 6),
		font-weight: map-get($type-font-weight, light),
		line-height: 1 // 96px
	),
	headline2: (
		font-size: 3.75rem, // 60px
		letter-spacing: letterspacing(-0.5, 3.75),
		font-weight: map-get($type-font-weight, light),
		line-height: 1 // 60px
	),
	headline3: (
		font-size: 3rem, // 48px
		letter-spacing: normal,
		font-weight: map-get($type-font-weight, regular),
		line-height: unit-less(50, 48)  // 50px
	),
	headline4: (
		font-size: 2.125rem, // 34px
		letter-spacing: letterspacing(0.25, 2.125),
		font-weight: map-get($type-font-weight, regular),
		line-height: unit-less(40, 34) // 40px
	),
	headline5: (
		font-size: 1.5rem, // 24px
		letter-spacing: normal,
		font-weight: map-get($type-font-weight, regular),
		line-height: unit-less(32, 24) // 32px
	),
	title: (
		font-size: 1.25rem, // 20px
		letter-spacing: letterspacing(0.25, 1.25),
		font-weight: map-get($type-font-weight, medium),
		line-height: unit-less(32, 20) // 32px
	),
	subtitle1: (
		font-size: 1rem, // 16px
		letter-spacing: letterspacing(0.15, 1),
		font-weight: map-get($type-font-weight, light),
		line-height: unit-less(28, 16) // 28px
	),
	subtitle2: (
		font-size: 0.875rem, // 14px
		letter-spacing: letterspacing(0.1, 0.875),
		font-weight: map-get($type-font-weight, regular),
		line-height: unit-less(22, 14) // 22px
	),
	body1: (
		font-size: 1rem, // 16px
		letter-spacing: letterspacing(0.5, 1),
		font-weight: map-get($type-font-weight, medium),
		line-height: unit-less(24, 16) // 24px
	),
	body2: (
		font-size: 0.875rem, // 14px
		letter-spacing: letterspacing(0.25, 0.875),
		font-weight: map-get($type-font-weight, regular),
		line-height: unit-less(20, 14) // 20px
	),
	button: (
		font-size: 0.875rem, // 14px
		letter-spacing: letterspacing(01.25, 0.875),
		font-weight: map-get($type-font-weight, medium),
		line-height: unit-less(36, 14) // 36px
	),
	caption: (
		font-size: 0.75rem, // 12px
		letter-spacing: letterspacing(0.4, 0.75),
		font-weight: map-get($type-font-weight, regular),
		line-height: unit-less(20, 12) // 20px
	),
	overline: (
		font-size: 0.75rem, // 12px
		letter-spacing: letterspacing(2, 0.75),
		font-weight: map-get($type-font-weight, regular),
		line-height: unit-less(32, 12) // 32px
	)
);

//
// @scss
@mixin type($type, $lh: false, $fw: false) {
	$type-props: map-get($type-styles, $type);
	font-size: map-get($type-props, font-size);
	letter-spacing: map-get($type-props, letter-spacing);

	@if not map-has-key($type-styles, $type) {
		@error 'Invalid style specified! Choose one of #{map-keys($type-styles)}';
	}

	@if $type == button {
		text-transform: uppercase;
	}

	@if $type == overline {
		text-transform: uppercase;
	}

	@if $fw {
		font-weight: $fw;
	} @else {
		font-weight: #{map-get($type-props, font-weight)};
	}

	@if $lh {
		line-height: $lh;
	} @else {
		line-height: map-get($type-props, line-height);
	}
}
